generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Member {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  status    MemberStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  registrations EventRegistration[]
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  status        MemberStatus? 

  // přidané pro e-mail/heslo (volitelné)
  passwordHash  String?

  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  startsAt    DateTime
  endsAt      DateTime
  location    String?
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  registrations EventRegistration[]
}

model EventRegistration {
  id        String  @id @default(cuid())
  member    Member  @relation(fields: [memberId], references: [id])
  memberId  String
  event     Event   @relation(fields: [eventId], references: [id])
  eventId   String
  status    RegistrationStatus @default(REGISTERED)
  createdAt DateTime @default(now())

  @@unique([memberId, eventId])
}

enum MemberStatus {
  ACTIVE
  INACTIVE
}

enum RegistrationStatus {
  REGISTERED
  CANCELLED
}
